#include <iostream>
using namespace std;

class Employee {

private:
    int empCode;
    string name;
    double baseMonthlySalary;

public:

    Employee() {
        // ❌ Wrong: you redeclared local variables (int empCode = 0;)
        // ✅ Fix: directly assign to class members
        empCode = 0;
        name = " ";
        baseMonthlySalary = 0.0;

        cout << "Empty constructor called!!" << endl;
    }

    Employee(int code, string names, double salary) {
        // ❌ Wrong: int empCode = code; (local variable)
        // ✅ Fix: assign to class attributes
        empCode = code;
        name = names;
        baseMonthlySalary = salary;

        cout << "Parameterized constructor called!!" << endl;
    }

    void setAll(string names, int code, double salary) {
        // ❌ Wrong: string name = names; (local variable again)
        // ✅ Fix: assign to data members
        name = names;
        empCode = code;
        baseMonthlySalary = salary;
    }

    void setempcode(int code) {
        empCode = code;  // ✅ no "int" here
    }

    void setname(string names) {
        name = names;  // ✅ no "string" here
    }

    void setbaseMonthlySalary(double salary) {
        baseMonthlySalary = salary;  // ✅ no "double" here
    }

    int getempCode() {
        return empCode;
    }

    string getName() {
        return name;
    }

    double getBaseMonthlySalary() {
        return baseMonthlySalary;
    }

    double calculateNetMonthlySalary() {
        double houseAllowance = baseMonthlySalary * 0.15;
        double medicalAllowance = baseMonthlySalary * 0.05;

        double calSalary = baseMonthlySalary + houseAllowance + medicalAllowance;

        double flatTax = calSalary * 0.10; // ❌ Wrong before: tax was on base only
        calSalary -= flatTax;

        if (calSalary > 45000) {
            calSalary -= 2000; // source tax
        }

        return calSalary;
    }

    void display() {
        cout << "Employee's name : " << name << endl;
        cout << "Employee's code : " << empCode << endl;
        cout << "Employee's monthly salary : " << baseMonthlySalary << endl;
        cout << "Salary with allowance : " << calculateNetMonthlySalary() << endl;
    }
};

int main() {
    Employee e1;
    Employee e2;

    e1.setAll("Digonto", 1029, 30000);
    e1.display();

    cout << endl;

    e2.setAll("Wasif", 8373, 25000);
    e2.display();

    return 0;
}

2.

#include <iostream>
using namespace std;

class Teacher{

private :
    string name;
    int teacherId;
    double baseMonthlySalary;

public :
    Teacher (){
        name = " ";
        teacherId = 0;
        baseMonthlySalary =0.0;

        cout<<"Empty constructor called!!"<<endl;}
        

    Teacher (string names,int id,double salary){

        name = names;
        teacherId = id;
        baseMonthlySalary = salary;

        cout<<"Parameterized constructor called!!"<<endl;}

    void setAll (string names,int id,double salary){

        name = names;
        teacherId = id;
        baseMonthlySalary = salary;
    }
    void setName (string names){
    name = names;}

    void setTeacherId (int id){
    teacherId = id;}

    void setBaseMonnthlySalary (double salary){
    baseMonthlySalary = salary;}

    string getName (){
     return name;}

    int getTeacherId (){
    return teacherId;}

    double getBaseMonthlySalary (){
    return baseMonthlySalary;}

    double calculateNetMonthlySalary(){

        double calSalary;

        double researchAllowance = baseMonthlySalary*0.2;

        double gradingAllowance = baseMonthlySalary*0.1;

        calSalary = baseMonthlySalary+researchAllowance+gradingAllowance;

        double tax = calSalary*0.12;

        double netSalary = calSalary - tax;

        if (calSalary>50000)
        {
            calSalary-=1500;
        }


        return netSalary;
    }
    void display(){

        cout<<"Enter teacher id :"<<teacherId<<endl;
        cout<<"Enter teacher name :"<<name<<endl;
        cout<<"Enter teacher salary :"<<baseMonthlySalary<<endl;
        cout<<"Net total salary :"<<calculateNetMonthlySalary()<<endl;}

    };

    int main (){

        Teacher t1;
        Teacher t2;

        cout<<endl;


        t1.setAll("Digonto",8383,50000);
        t1.calculateNetMonthlySalary();
        t1.display();

        cout<<endl;


        t2.setAll("Sifat",8378,60000);
        t2.calculateNetMonthlySalary();
        t2.display();

        return 0;
    }

3.

//corrected some code parts

#include <iostream>
using namespace std;

class Product{

private :
    string productName;
    int productId;
    double basePrice;

public :
    Product (){
        productName = " ";
        productId = 0;
        basePrice =0.0;

        cout<<"Empty constructor called!!"<<endl;}

Product (string names,int id,double price){

        productName = names;
        productId = id;
        basePrice= price;

        cout<<"Parameterized constructor called!!"<<endl;}

    void setAll (string names,int id,double price){

        productName = names;
        productId = id;
        basePrice = price;
    }
    void setName (string names){
    productName = names;}

    void setProductId (int id){
    productId = id;}

    void setBasePrice (double price){
    basePrice = price;}

    string getProductName (){
    return productName;}

    int getProductId (){
    return productId;}

    double getBasePrice (){
    return basePrice;}

    double calculateFinalPrice(){

        double calPrice;
        double shippingCharge;

        shippingCharge = basePrice*0.05;
        calPrice=basePrice+shippingCharge;

        double discount = basePrice*0.1;

        if (basePrice>1000)
        {
            calPrice = basePrice - discount;
        }

        double vat = calPrice*0.15;
        double netPrice = calPrice+vat;

        return netPrice;
    }
    void display(){

        cout<<"Enter product id :"<<productId<<endl;
        cout<<"Enter product name :"<<productName<<endl;
        cout<<"Enter product price :"<<basePrice<<endl;
        cout<<"Final price :"<<calculateFinalPrice()<<endl;
        }

    };

    int main (){

        Product();

        Product p1("Perfume",6283,5000);
        Product p2("Foam",6302,600);

        cout<<endl;


        p1.display();

        cout<<endl;

        p2.display();

        return 0;
    }


















